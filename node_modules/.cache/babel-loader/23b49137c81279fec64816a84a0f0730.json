{"ast":null,"code":"import wordBank from './wordle-bank.txt';\nexport const boardDefault = (ROW, COL) => {\n  const rowIndex = Array.from(Array(ROW).keys());\n  const colIndex = Array.from(Array(COL).keys());\n  return rowIndex.map(rowIdx => colIndex.map((colIdx, rowIdx) => \"\"));\n}; // {rowIndex.map(rowIdx => \n//     <div className='row'>\n//     {colIndex.map((colIdx,rowIdx) => <Letter letterPos={colIdx} attempVal={rowIdx}/>)}\n\nexport const generateWordSet = async () => {\n  let wordSet;\n  let todaysWord;\n  await fetch(wordBank).then(response => response.text()).then(result => {\n    const wordArr = result.split(\"\\r\\n\");\n    todaysWord = wordArr[Math.floor(Math.random() * wordArr.length)];\n    wordSet = new Set(wordArr);\n  });\n  return {\n    wordSet,\n    todaysWord\n  };\n};","map":{"version":3,"sources":["G:/2020NEU/CS5610/Assignments/project2/wordleNew/wordle/src/Words.js"],"names":["wordBank","boardDefault","ROW","COL","rowIndex","Array","from","keys","colIndex","map","rowIdx","colIdx","generateWordSet","wordSet","todaysWord","fetch","then","response","text","result","wordArr","split","Math","floor","random","length","Set"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,mBAArB;AAOA,OAAO,MAAMC,YAAY,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACtC,QAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACH,GAAD,CAAL,CAAWK,IAAX,EAAX,CAAjB;AACA,QAAMC,QAAQ,GAAGH,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACF,GAAD,CAAL,CAAWI,IAAX,EAAX,CAAjB;AACA,SAAQH,QAAQ,CAACK,GAAT,CAAaC,MAAM,IACvBF,QAAQ,CAACC,GAAT,CAAa,CAACE,MAAD,EAASD,MAAT,KAAoB,EAAjC,CADI,CAAR;AAGH,CANM,C,CAQP;AACA;AACA;;AAEA,OAAO,MAAME,eAAe,GAAG,YAAY;AACvC,MAAIC,OAAJ;AACA,MAAIC,UAAJ;AACA,QAAMC,KAAK,CAACf,QAAD,CAAL,CAAgBgB,IAAhB,CAAsBC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAAnC,EAAoDF,IAApD,CAA0DG,MAAD,IAAY;AACvE,UAAMC,OAAO,GAAGD,MAAM,CAACE,KAAP,CAAa,MAAb,CAAhB;AACAP,IAAAA,UAAU,GAAGM,OAAO,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,OAAO,CAACK,MAAnC,CAAD,CAApB;AACAZ,IAAAA,OAAO,GAAG,IAAIa,GAAJ,CAAQN,OAAR,CAAV;AACH,GAJK,CAAN;AAMA,SAAO;AAAEP,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAP;AACH,CAVM","sourcesContent":["import wordBank from './wordle-bank.txt';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const boardDefault = (ROW, COL) => {\r\n    const rowIndex = Array.from(Array(ROW).keys());\r\n    const colIndex = Array.from(Array(COL).keys());\r\n    return (rowIndex.map(rowIdx =>\r\n        colIndex.map((colIdx, rowIdx) => \"\")\r\n    ))\r\n};\r\n\r\n// {rowIndex.map(rowIdx => \r\n//     <div className='row'>\r\n//     {colIndex.map((colIdx,rowIdx) => <Letter letterPos={colIdx} attempVal={rowIdx}/>)}\r\n\r\nexport const generateWordSet = async () => {\r\n    let wordSet;\r\n    let todaysWord;\r\n    await fetch(wordBank).then((response) => response.text()).then((result) => {\r\n        const wordArr = result.split(\"\\r\\n\");\r\n        todaysWord = wordArr[Math.floor(Math.random() * wordArr.length)]\r\n        wordSet = new Set(wordArr);\r\n    });\r\n\r\n    return { wordSet, todaysWord };\r\n};"]},"metadata":{},"sourceType":"module"}