{"ast":null,"code":"var _jsxFileName = \"G:\\\\2020NEU\\\\CS5610\\\\Assignments\\\\project2\\\\wordleNew\\\\wordle\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Board } from './components/Board';\nimport { Keyboard } from './components/Keyboard';\nimport './App.css';\nimport React, { useState, createContext } from 'react';\nimport { boardDefault, generateWordSet } from './Words';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\n\nfunction App() {\n  _s();\n\n  const [board, setBoard] = useState(boardDefault);\n  const [currAttempt, setCurrAttempt] = useState({\n    attempt: 0,\n    letterPos: 0\n  });\n  const [wordSet, setWordSet] = useState(new Set());\n  const correctWord = \"RIGHT\";\n  useEffect(() => {\n    generateWordSet().then(words => {\n      setWordSet(words.wordSet);\n    });\n    return () => {\n      second;\n    };\n  }, [third]);\n\n  const onSelectLetter = keyVal => {\n    if (currAttempt.letterPos > 4) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos] = keyVal;\n    setBoard(newBoard);\n    setCurrAttempt({ ...currAttempt,\n      letterPos: currAttempt.letterPos + 1\n    });\n  };\n\n  const onDelete = () => {\n    if (currAttempt.letterPos === 0) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos - 1] = \"\";\n    setBoard(newBoard);\n    setCurrAttempt({ ...currAttempt,\n      letterPos: currAttempt.letterPos - 1\n    });\n  };\n\n  const onEnter = () => {\n    if (currAttempt.letterPos !== 5) return;\n    setCurrAttempt({\n      attempt: currAttempt.attempt + 1,\n      letterPos: 0\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wordle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        board,\n        setBoard,\n        currAttempt,\n        setCurrAttempt,\n        onSelectLetter,\n        onDelete,\n        onEnter,\n        correctWord\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [/*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Keyboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3zae9lAbxagQTU5GZdK+0yKdudk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["G:/2020NEU/CS5610/Assignments/project2/wordleNew/wordle/src/App.js"],"names":["Board","Keyboard","React","useState","createContext","boardDefault","generateWordSet","AppContext","App","board","setBoard","currAttempt","setCurrAttempt","attempt","letterPos","wordSet","setWordSet","Set","correctWord","useEffect","then","words","second","third","onSelectLetter","keyVal","newBoard","onDelete","onEnter"],"mappings":"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","sourcesContent":["import { Board } from './components/Board';\nimport { Keyboard } from './components/Keyboard';\nimport './App.css';\nimport React, { useState, createContext } from 'react';\nimport { boardDefault, generateWordSet } from './Words';\nexport const AppContext = createContext();\n\nfunction App() {\n  const [board, setBoard] = useState(boardDefault);\n  const [currAttempt, setCurrAttempt] = useState({ attempt:0, letterPos:0});\n  const [wordSet, setWordSet] = useState(new Set());\n\n  const correctWord = \"RIGHT\";\n\n  useEffect(() => {\n    generateWordSet().then((words)=>{\n      setWordSet(words.wordSet);\n    })\n  \n    return () => {\n      second\n    }\n  }, [third])\n  \n\n  const onSelectLetter = (keyVal)=>{\n    if(currAttempt.letterPos > 4) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos] = keyVal;\n    setBoard(newBoard);\n    setCurrAttempt({...currAttempt, letterPos:currAttempt.letterPos+1});\n  }\n\n  const onDelete = ()=>{\n    if(currAttempt.letterPos === 0) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos - 1] = \"\";\n    setBoard(newBoard);\n    setCurrAttempt({...currAttempt, letterPos:currAttempt.letterPos-1});\n  }\n\n  const onEnter = ()=>{\n    if(currAttempt.letterPos !== 5) return;\n    setCurrAttempt({attempt:currAttempt.attempt+1, letterPos: 0})\n  }\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <h1>Wordle</h1>\n      </nav>\n      <AppContext.Provider value={{ board, setBoard, currAttempt, setCurrAttempt, onSelectLetter, onDelete, onEnter, correctWord }}>\n        <div className='game'>\n        <Board />\n        <Keyboard />\n        </div>\n      </AppContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}