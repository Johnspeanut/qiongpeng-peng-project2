{"ast":null,"code":"var _jsxFileName = \"G:\\\\2020NEU\\\\CS5610\\\\Assignments\\\\project2\\\\wordleNew\\\\wordle\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Board } from './components/Board';\nimport { Keyboard } from './components/Keyboard';\nimport './App.css';\nimport React, { useState, createContext, useEffect } from 'react';\nimport { boardDefault, generateWordSet } from './Words';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\n\nfunction App() {\n  _s();\n\n  const [board, setBoard] = useState(boardDefault);\n  const [currAttempt, setCurrAttempt] = useState({\n    attempt: 0,\n    letterPos: 0\n  });\n  const [wordSet, setWordSet] = useState(new Set());\n  const [gameOver, setGameOver] = useState();\n  const correctWord = \"RIGHT\";\n  useEffect(() => {\n    generateWordSet().then(words => {\n      setWordSet(words.wordSet);\n    });\n  }, []);\n\n  const onSelectLetter = keyVal => {\n    if (currAttempt.letterPos > 4) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos] = keyVal;\n    setBoard(newBoard);\n    setCurrAttempt({ ...currAttempt,\n      letterPos: currAttempt.letterPos + 1\n    });\n  };\n\n  const onDelete = () => {\n    if (currAttempt.letterPos === 0) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos - 1] = \"\";\n    setBoard(newBoard);\n    setCurrAttempt({ ...currAttempt,\n      letterPos: currAttempt.letterPos - 1\n    });\n  };\n\n  const onEnter = () => {\n    if (currAttempt.letterPos !== 5) return;\n    let currWord = \"\";\n\n    for (let i = 0; i < 5; i++) {\n      currWord += board[currAttempt.attempt][i];\n    }\n\n    if (wordSet.has(currWord.toLowerCase())) {\n      setCurrAttempt({\n        attempt: currAttempt.attempt + 1,\n        letterPos: 0\n      });\n    } else {\n      alert(\"Word not Found\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wordle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        board,\n        setBoard,\n        currAttempt,\n        setCurrAttempt,\n        onSelectLetter,\n        onDelete,\n        onEnter,\n        correctWord,\n        gameOver,\n        setGameOver\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [/*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Keyboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QcTykkx3pgNsAPqtbqmqE2Dcb90=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["G:/2020NEU/CS5610/Assignments/project2/wordleNew/wordle/src/App.js"],"names":["Board","Keyboard","React","useState","createContext","useEffect","boardDefault","generateWordSet","AppContext","App","board","setBoard","currAttempt","setCurrAttempt","attempt","letterPos","wordSet","setWordSet","Set","gameOver","setGameOver","correctWord","then","words","onSelectLetter","keyVal","newBoard","onDelete","onEnter","currWord","i","has","toLowerCase","alert"],"mappings":"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","sourcesContent":["import { Board } from './components/Board';\nimport { Keyboard } from './components/Keyboard';\nimport './App.css';\nimport React, { useState, createContext, useEffect } from 'react';\nimport { boardDefault, generateWordSet } from './Words';\nexport const AppContext = createContext();\n\nfunction App() {\n  const [board, setBoard] = useState(boardDefault);\n  const [currAttempt, setCurrAttempt] = useState({ attempt:0, letterPos:0});\n  const [wordSet, setWordSet] = useState(new Set());\n  const [gameOver, setGameOver] = useState()\n\n  const correctWord = \"RIGHT\";\n\n  useEffect(() => {\n    generateWordSet().then((words)=>{\n      setWordSet(words.wordSet);\n    }); \n  }, [])\n  \n\n  const onSelectLetter = (keyVal)=>{\n    if(currAttempt.letterPos > 4) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos] = keyVal;\n    setBoard(newBoard);\n    setCurrAttempt({...currAttempt, letterPos:currAttempt.letterPos+1});\n  }\n\n  const onDelete = ()=>{\n    if(currAttempt.letterPos === 0) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos - 1] = \"\";\n    setBoard(newBoard);\n    setCurrAttempt({...currAttempt, letterPos:currAttempt.letterPos-1});\n  }\n\n  const onEnter = ()=>{\n    if(currAttempt.letterPos !== 5) return;\n    let currWord = \"\";\n    for(let i = 0; i < 5; i++){\n      currWord += board[currAttempt.attempt][i];\n    }\n    if(wordSet.has(currWord.toLowerCase())){\n      setCurrAttempt({attempt:currAttempt.attempt+1, letterPos: 0});\n    }else{\n      alert(\"Word not Found\");\n    }\n    \n  }\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <h1>Wordle</h1>\n      </nav>\n      <AppContext.Provider value={{ board, setBoard, currAttempt, setCurrAttempt, onSelectLetter, onDelete, onEnter, correctWord, gameOver, setGameOver }}>\n        <div className='game'>\n        <Board />\n        <Keyboard />\n        </div>\n      </AppContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}