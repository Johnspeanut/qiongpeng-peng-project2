{"ast":null,"code":"var _jsxFileName = \"G:\\\\2020NEU\\\\CS5610\\\\Assignments\\\\project2\\\\wordleNew\\\\wordle\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Board } from './components/Board';\nimport { Keyboard } from './components/Keyboard';\nimport './App.css';\nimport React, { useState, createContext, useEffect } from 'react';\nimport { boardDefault, generateWordSet } from './Words';\nimport GameOver from './components/GameOver';\nimport { FaGithub } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\n\nfunction App() {\n  _s();\n\n  const [board, setBoard] = useState(boardDefault);\n  const [currAttempt, setCurrAttempt] = useState({\n    attempt: 0,\n    letterPos: 0\n  });\n  const [wordSet, setWordSet] = useState(new Set());\n  const [disabledLetters, setDisabledLetter] = useState([]);\n  const [gameOver, setGameOver] = useState({\n    gameOver: false,\n    guessedWord: false\n  });\n  const [correctWord, setCorrectWord] = useState(\"\");\n  useEffect(() => {\n    generateWordSet().then(words => {\n      setWordSet(words.wordSet);\n      setCorrectWord(words.todaysWord);\n      console.log(words.todaysWord);\n    });\n  }, []);\n\n  const onSelectLetter = keyVal => {\n    if (currAttempt.letterPos > 4) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos] = keyVal;\n    setBoard(newBoard);\n    setCurrAttempt({ ...currAttempt,\n      letterPos: currAttempt.letterPos + 1\n    });\n  };\n\n  const onDelete = () => {\n    if (currAttempt.letterPos === 0) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos - 1] = \"\";\n    setBoard(newBoard);\n    setCurrAttempt({ ...currAttempt,\n      letterPos: currAttempt.letterPos - 1\n    });\n  };\n\n  const onEnter = () => {\n    if (currAttempt.letterPos !== 5) return;\n    let currWord = \"\";\n\n    for (let i = 0; i < 5; i++) {\n      currWord += board[currAttempt.attempt][i];\n    }\n\n    if (wordSet.has(currWord.toLowerCase())) {\n      setCurrAttempt({\n        attempt: currAttempt.attempt + 1,\n        letterPos: 0\n      });\n    } else {\n      console.log(wordSet);\n      alert(\"Word not Found\");\n    }\n\n    if (currWord.toLowerCase() === correctWord.toLowerCase()) {\n      setGameOver({\n        gameOver: true,\n        guessedWord: true\n      });\n      return;\n    }\n\n    if (currAttempt.attempt >= 5) {\n      setGameOver({\n        gameOver: true,\n        guessedWord: false\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-left\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"help-button\",\n          className: \"icon\",\n          \"aria-label\": \"Help\",\n          tabindex: \"-1\",\n          children: /*#__PURE__*/_jsxDEV(FaGithub, {\n            size: \"2em\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wordle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"menu-right\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"settings-button\",\n          className: \"icon\",\n          \"aria-label\": \"Settings\",\n          tabindex: \"-1\",\n          children: /*#__PURE__*/_jsxDEV(\"game-icon\", {\n            icon: \"settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        board,\n        setBoard,\n        currAttempt,\n        setCurrAttempt,\n        onSelectLetter,\n        onDelete,\n        onEnter,\n        correctWord,\n        gameOver,\n        setGameOver,\n        disabledLetters,\n        setDisabledLetter\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [/*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), gameOver.gameOver ? /*#__PURE__*/_jsxDEV(GameOver, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 28\n        }, this) : /*#__PURE__*/_jsxDEV(Keyboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DZFYGvXvpcFwAkn3/R/qLKkIj70=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["G:/2020NEU/CS5610/Assignments/project2/wordleNew/wordle/src/App.js"],"names":["Board","Keyboard","React","useState","createContext","useEffect","boardDefault","generateWordSet","GameOver","FaGithub","AppContext","App","board","setBoard","currAttempt","setCurrAttempt","attempt","letterPos","wordSet","setWordSet","Set","disabledLetters","setDisabledLetter","gameOver","setGameOver","guessedWord","correctWord","setCorrectWord","then","words","todaysWord","console","log","onSelectLetter","keyVal","newBoard","onDelete","onEnter","currWord","i","has","toLowerCase","alert"],"mappings":"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","sourcesContent":["import { Board } from './components/Board';\nimport { Keyboard } from './components/Keyboard';\nimport './App.css';\nimport React, { useState, createContext, useEffect } from 'react';\nimport { boardDefault, generateWordSet } from './Words';\nimport  GameOver from './components/GameOver';\nimport { FaGithub } from \"react-icons/fa\"\n\n\nexport const AppContext = createContext();\n\nfunction App() {\n  const [board, setBoard] = useState(boardDefault);\n  const [currAttempt, setCurrAttempt] = useState({ attempt:0, letterPos:0});\n  const [wordSet, setWordSet] = useState(new Set());\n  const [disabledLetters, setDisabledLetter] = useState([]);\n  const [gameOver, setGameOver] = useState({gameOver:false,guessedWord:false});\n  const [correctWord, setCorrectWord] = useState(\"\");\n\n \n\n  useEffect(() => {\n    generateWordSet().then((words)=>{\n      setWordSet(words.wordSet);\n      setCorrectWord(words.todaysWord);\n      console.log(words.todaysWord);\n    }); \n  }, [])\n  \n\n  const onSelectLetter = (keyVal)=>{\n    if(currAttempt.letterPos > 4) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos] = keyVal;\n    setBoard(newBoard);\n    setCurrAttempt({...currAttempt, letterPos:currAttempt.letterPos+1});\n  }\n\n  const onDelete = ()=>{\n    if(currAttempt.letterPos === 0) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letterPos - 1] = \"\";\n    setBoard(newBoard);\n    setCurrAttempt({...currAttempt, letterPos:currAttempt.letterPos-1});\n  }\n\n  const onEnter = ()=>{\n    if(currAttempt.letterPos !== 5) return;\n    let currWord = \"\";\n    for(let i = 0; i < 5; i++){\n      currWord += board[currAttempt.attempt][i];\n    }\n    if(wordSet.has(currWord.toLowerCase())){\n      setCurrAttempt({attempt:currAttempt.attempt+1, letterPos: 0});\n    }else{\n      console.log(wordSet);\n      alert(\"Word not Found\");\n    }\n    if(currWord.toLowerCase() === correctWord.toLowerCase()){\n      setGameOver({gameOver:true,guessedWord:true});\n      return;\n    }\n    if(currAttempt.attempt >= 5){\n      setGameOver({gameOver:true,guessedWord:false});\n    } \n    \n  }\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <div className='menu-left'>\n          <button id=\"help-button\" className='icon' aria-label='Help' tabindex='-1'>\n            <FaGithub size=\"2em\"/>\n          </button>\n        </div>\n        <h1>Wordle</h1>\n        <div class=\"menu-right\">\n           <button id=\"settings-button\" className='icon' aria-label='Settings' tabindex=\"-1\">\n             <game-icon icon=\"settings\"></game-icon>\n           </button>\n        </div>\n      </nav>\n      <AppContext.Provider value={{ board, setBoard, currAttempt, setCurrAttempt, onSelectLetter, onDelete, onEnter, correctWord, gameOver, setGameOver, disabledLetters, setDisabledLetter }}>\n        <div className='game'>\n        <Board />\n        {gameOver.gameOver?<GameOver/>:<Keyboard />}\n        </div>\n      </AppContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}