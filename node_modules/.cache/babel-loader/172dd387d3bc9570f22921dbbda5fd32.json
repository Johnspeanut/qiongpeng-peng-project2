{"ast":null,"code":"import wordBank from './wordle-bank.txt';\nimport { AppContext } from '../App';\nimport { useContext } from 'react';\nconst {\n  ROW,\n  COLr\n} = useContext(AppContext);\nexport const boardDefault = [[\"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\"]];\nexport const generateWordSet = async () => {\n  let wordSet;\n  let todaysWord;\n  await fetch(wordBank).then(response => response.text()).then(result => {\n    const wordArr = result.split(\"\\r\\n\");\n    todaysWord = wordArr[Math.floor(Math.random() * wordArr.length)];\n    wordSet = new Set(wordArr);\n  });\n  return {\n    wordSet,\n    todaysWord\n  };\n};","map":{"version":3,"sources":["G:/2020NEU/CS5610/Assignments/project2/wordleNew/wordle/src/Words.js"],"names":["wordBank","AppContext","useContext","ROW","COLr","boardDefault","generateWordSet","wordSet","todaysWord","fetch","then","response","text","result","wordArr","split","Math","floor","random","length","Set"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,mBAArB;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,UAAT,QAA2B,OAA3B;AAEA,MAAM;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,IAAeF,UAAU,CAACD,UAAD,CAA/B;AAEA,OAAO,MAAMI,YAAY,GAAG,CACxB,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,CADwB,EAExB,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,CAFwB,EAGxB,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,CAHwB,EAIxB,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,CAJwB,EAKxB,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,CALwB,EAMxB,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,CANwB,CAArB;AASP,OAAO,MAAMC,eAAe,GAAG,YAAS;AACpC,MAAIC,OAAJ;AACA,MAAIC,UAAJ;AACA,QAAMC,KAAK,CAACT,QAAD,CAAL,CAAgBU,IAAhB,CAAsBC,QAAD,IAAaA,QAAQ,CAACC,IAAT,EAAlC,EAAmDF,IAAnD,CAAyDG,MAAD,IAAW;AACrE,UAAMC,OAAO,GAAGD,MAAM,CAACE,KAAP,CAAa,MAAb,CAAhB;AACAP,IAAAA,UAAU,GAAGM,OAAO,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcJ,OAAO,CAACK,MAAjC,CAAD,CAApB;AACAZ,IAAAA,OAAO,GAAG,IAAIa,GAAJ,CAAQN,OAAR,CAAV;AACP,GAJS,CAAN;AAMJ,SAAO;AAAEP,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAP;AACC,CAVM","sourcesContent":["import wordBank from './wordle-bank.txt';\r\nimport { AppContext } from '../App'\r\nimport { useContext } from 'react';\r\n\r\nconst { ROW, COLr} = useContext(AppContext);\r\n\r\nexport const boardDefault = [\r\n    [\"\",\"\",\"\",\"\",\"\"],\r\n    [\"\",\"\",\"\",\"\",\"\"],\r\n    [\"\",\"\",\"\",\"\",\"\"],\r\n    [\"\",\"\",\"\",\"\",\"\"],\r\n    [\"\",\"\",\"\",\"\",\"\"],\r\n    [\"\",\"\",\"\",\"\",\"\"]\r\n];\r\n\r\nexport const generateWordSet = async()=>{\r\n    let wordSet;\r\n    let todaysWord;\r\n    await fetch(wordBank).then((response)=> response.text()).then((result)=> {\r\n        const wordArr = result.split(\"\\r\\n\");\r\n        todaysWord = wordArr[Math.floor(Math.random()*wordArr.length)]\r\n        wordSet = new Set(wordArr);\r\n});\r\n\r\nreturn { wordSet, todaysWord };\r\n};"]},"metadata":{},"sourceType":"module"}