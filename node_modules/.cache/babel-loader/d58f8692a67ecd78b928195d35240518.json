{"ast":null,"code":"var _jsxFileName = \"G:\\\\2020NEU\\\\CS5610\\\\Assignments\\\\project2\\\\wordleNew\\\\wordle\\\\src\\\\components\\\\Letter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { AppContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Letter = _ref => {\n  _s();\n\n  let {\n    letterPos,\n    attempVal\n  } = _ref;\n  const {\n    board,\n    correctWord,\n    currAttempt,\n    setDisabledLetter\n  } = useContext(AppContext);\n  const letter = board[attempVal][letterPos];\n  const correct = correctWord.toUpperCase()[letterPos] === letter;\n  const almost = !correct && letter !== \"\" && correctWord.includes(letter);\n  const letterState = currAttempt.attempt > attempVal && (correct ? \"correct\" : almost ? \"almost\" : \"error\");\n  useEffect(() => {\n    if (letter !== \"\" && !correct && !almost) {\n      setDisabledLetter(prev => [...prev, letter]);\n    }\n  }, [currAttempt.attempt]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"letter\",\n    id: letterState,\n    children: letter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Letter, \"W2hYGpo3r+7zbwvySh1nrzGqli8=\");\n\n_c = Letter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Letter\");","map":{"version":3,"sources":["G:/2020NEU/CS5610/Assignments/project2/wordleNew/wordle/src/components/Letter.js"],"names":["React","useContext","useEffect","AppContext","Letter","letterPos","attempVal","board","correctWord","currAttempt","setDisabledLetter","letter","correct","toUpperCase","almost","includes","letterState","attempt","prev"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,UAAT,QAA2B,QAA3B;;AAEA,OAAO,MAAMC,MAAM,GAAG,QAA4B;AAAA;;AAAA,MAA3B;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAA2B;AAC9C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAqBC,IAAAA,WAArB;AAAmCC,IAAAA;AAAnC,MAAwDT,UAAU,CAACE,UAAD,CAAxE;AACA,QAAMQ,MAAM,GAAGJ,KAAK,CAACD,SAAD,CAAL,CAAiBD,SAAjB,CAAf;AAEA,QAAMO,OAAO,GAAGJ,WAAW,CAACK,WAAZ,GAA0BR,SAA1B,MAAyCM,MAAzD;AACA,QAAMG,MAAM,GAAG,CAACF,OAAD,IAAYD,MAAM,KAAK,EAAvB,IAA6BH,WAAW,CAACO,QAAZ,CAAqBJ,MAArB,CAA5C;AACA,QAAMK,WAAW,GAAGP,WAAW,CAACQ,OAAZ,GAAsBX,SAAtB,KAAoCM,OAAO,GAAC,SAAD,GAAWE,MAAM,GAAC,QAAD,GAAU,OAAtE,CAApB;AAEJZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGS,MAAM,KAAK,EAAX,IAAiB,CAACC,OAAlB,IAA6B,CAACE,MAAjC,EAAwC;AACpCJ,MAAAA,iBAAiB,CAAEQ,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUP,MAAV,CAAX,CAAjB;AACH;AAEF,GALQ,EAKN,CAACF,WAAW,CAACQ,OAAb,CALM,CAAT;AAOE,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,EAAE,EAAED,WAA5B;AAAA,cAA0CL;AAA1C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAlBM;;GAAMP,M;;KAAAA,M","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { AppContext } from '../App';\r\n\r\nexport const Letter = ({letterPos, attempVal}) => {\r\n    const { board, correctWord,currAttempt,  setDisabledLetter} = useContext(AppContext);\r\n    const letter = board[attempVal][letterPos];\r\n\r\n    const correct = correctWord.toUpperCase()[letterPos] === letter;\r\n    const almost = !correct && letter !== \"\" && correctWord.includes(letter);\r\n    const letterState = currAttempt.attempt > attempVal && (correct?\"correct\":almost?\"almost\":\"error\");\r\n\r\nuseEffect(() => {\r\n  if(letter !== \"\" && !correct && !almost){\r\n      setDisabledLetter((prev) => [...prev, letter]);\r\n  }\r\n\r\n}, [currAttempt.attempt]);\r\n\r\n  return (\r\n    <div className='letter' id={letterState}>{letter}</div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}